{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdpqx\\\\Downloads\\\\manzanas-main (1)\\\\manzanas-main\\\\manzanas\\\\frontend\\\\src\\\\pages\\\\Registro.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport RegisterForm from \"../componentes/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Registrarse() {\n  _s();\n  const [formData, setFormData] = useState({\n    NombreUsuario: '',\n    TipoDocumento: '',\n    Documento: '',\n    Rol: '',\n    Man: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [manzanas, setManzanas] = useState([]);\n  const [cargandoManzanas, setCargandoManzanas] = useState(true);\n  const navigate = useNavigate();\n\n  // Cargar manzanas al montar el componente\n  useEffect(() => {\n    cargarManzanas();\n  }, []);\n  const cargarManzanas = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/manzanas');\n      const result = await response.json();\n      if (result.success) {\n        setManzanas(result.data);\n      } else {\n        console.error('Error al cargar manzanas:', result.message);\n      }\n    } catch (error) {\n      console.error('Error de conexión:', error);\n    } finally {\n      setCargandoManzanas(false);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      NombreUsuario,\n      TipoDocumento,\n      Documento,\n      Rol,\n      Man\n    } = formData;\n    if (!NombreUsuario || !TipoDocumento || !Documento || !Rol || !Man) {\n      alert('Por favor complete todos los campos');\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await fetch('http://localhost:5000/api/crear', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(formData)\n      });\n      let result;\n      try {\n        result = await res.json();\n      } catch (parseError) {\n        console.error('Error al parsear respuesta:', parseError);\n        alert('Error interno del servidor. Respuesta no válida.');\n        return;\n      }\n      if (result.success) {\n        alert(result.message);\n        // Redirigir basado en el rol\n        if (result.data && result.data.Rol === 'administrador') {\n          navigate('/administrador');\n        } else {\n          navigate('/usuario');\n        }\n      } else {\n        alert(result.message || 'Error al registrar usuario');\n      }\n    } catch (error) {\n      console.error('Error de conexión:', error);\n      alert('Error de conexión con el servidor. Verifique que el servidor esté ejecutándose.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Registrarsebody\",\n    children: /*#__PURE__*/_jsxDEV(RegisterForm, {\n      formData: formData,\n      manzanas: manzanas,\n      cargandoManzanas: cargandoManzanas,\n      loading: loading,\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      onBack: () => navigate(\"/\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(Registrarse, \"IR1ZIp4czGXQz6r4T5LByitMmKI=\", false, function () {\n  return [useNavigate];\n});\n_c = Registrarse;\nexport default Registrarse;\nvar _c;\n$RefreshReg$(_c, \"Registrarse\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","RegisterForm","jsxDEV","_jsxDEV","Registrarse","_s","formData","setFormData","NombreUsuario","TipoDocumento","Documento","Rol","Man","loading","setLoading","manzanas","setManzanas","cargandoManzanas","setCargandoManzanas","navigate","cargarManzanas","response","fetch","result","json","success","data","console","error","message","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","alert","res","method","headers","credentials","body","JSON","stringify","parseError","className","children","onChange","onSubmit","onBack","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jdpqx/Downloads/manzanas-main (1)/manzanas-main/manzanas/frontend/src/pages/Registro.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; \nimport RegisterForm from \"../componentes/\";\n\nfunction Registrarse() {\n  const [formData, setFormData] = useState({\n    NombreUsuario: '',\n    TipoDocumento: '',\n    Documento: '',\n    Rol: '',\n    Man: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [manzanas, setManzanas] = useState([]);\n  const [cargandoManzanas, setCargandoManzanas] = useState(true);\n  const navigate = useNavigate();\n\n  // Cargar manzanas al montar el componente\n  useEffect(() => {\n    cargarManzanas();\n  }, []);\n\n  const cargarManzanas = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/manzanas');\n      const result = await response.json();\n      \n      if (result.success) {\n        setManzanas(result.data);\n      } else {\n        console.error('Error al cargar manzanas:', result.message);\n      }\n    } catch (error) {\n      console.error('Error de conexión:', error);\n    } finally {\n      setCargandoManzanas(false);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { NombreUsuario, TipoDocumento, Documento, Rol, Man } = formData;\n\n    if (!NombreUsuario || !TipoDocumento || !Documento || !Rol || !Man) {\n      alert('Por favor complete todos los campos');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const res = await fetch('http://localhost:5000/api/crear', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(formData)\n      });\n\n      let result;\n      try {\n        result = await res.json();\n      } catch (parseError) {\n        console.error('Error al parsear respuesta:', parseError);\n        alert('Error interno del servidor. Respuesta no válida.');\n        return;\n      }\n\n      if (result.success) {\n        alert(result.message);\n        // Redirigir basado en el rol\n        if (result.data && result.data.Rol === 'administrador') {\n          navigate('/administrador');\n        } else {\n          navigate('/usuario');\n        } \n      } else {\n        alert(result.message || 'Error al registrar usuario');\n      }\n    } catch (error) {\n      console.error('Error de conexión:', error);\n      alert('Error de conexión con el servidor. Verifique que el servidor esté ejecutándose.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\nreturn (\n    <div className=\"Registrarsebody\">\n      <RegisterForm\n        formData={formData}\n        manzanas={manzanas}\n        cargandoManzanas={cargandoManzanas}\n        loading={loading}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n        onBack={() => navigate(\"/\")}\n      />\n    </div>\n);\n}\n\nexport default Registrarse;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}